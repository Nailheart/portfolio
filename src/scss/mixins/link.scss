/*
  The mixin works by adding a pseudo-element (::before) to the element being styled and animating
  its width and position on hover. The $direction parameter determines where the hover effect
  originates from, and can be set to one of the following values:

    - center (default): the hover effect starts from the center and expands outwards.
    - right: the hover effect starts from the right edge and expands leftwards.
    - left: the hover effect starts from the left edge and expands rightwards.
    - to-right: the hover effect starts from the left edge and expands rightwards.
    - to-left: the hover effect starts from the right edge and expands leftwards.

  If $direction is set to any other value, an error will be thrown.

  Overall, this mixin provides a flexible and customizable way to create hover effects for links.
**/

@mixin link-hover($color: currentColor, $direction: center) {
  position: relative;
  transition: .2s;

  &::before {
    content: "";
    width: 0;
    height: 2px;
    background-color: $color;
    position: absolute;
    top: 100%;
    transition: inherit;
  }

  &:hover,
  &:focus-visible {
    &::before { width: 100%; }
  }

  @if $direction == center {
    &::before { left: 50%; }

    &:hover,
    &:focus-visible {
      &::before { left: 0; }
    }
  } @else if $direction == right {
    &::before { right: 0; }
  } @else if $direction == left {
    &::before { left: 0; }
  } @else if $direction == to-right {
    &::before { right: 0; }

    &:hover,
    &:focus-visible {
      &::before {
        right: auto;
        left: 0;
      }
    }
  } @else if $direction == to-left {
    &::before { left: 0; }

    &:hover,
    &:focus-visible {
      &::before {
        right: 0;
        left: auto;
      }
    }

  } @else {
    @error "Unknown direction #{$direction}.";
  }
}